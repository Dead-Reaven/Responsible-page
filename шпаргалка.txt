 -------------------Фиксированая вёрстка------------------
<meta name='viewport' content='width=1170'>
body{ min-width=1170px; }
----------------Отзывчивая вёрстка (резиновая)----------------------
<meta name='viewport' content='width=divice-width'>
->убрать ограничиние для body
для контейнера ставим максимальную ширину по макету
.container{
max-width: 1200px;
margin: 0px auto;
padding: 0px 15px;}
-> убрать все свойства фиксированых ширин
-> flex: 0 1 (прописывать в процентах)

-------------------Адаптивная вёрстка-------------------------
+ всё тоже что и в "Oтзывчивой вёрстке"
-> написать "сетку" применяя brackpoint ~ медиа запросы
пример:
// максимальная ширина = ширине контейнера
// перестраиваем мкс ширину по-уже
@media (max-width:1200px){
// чуть меньше маленького монитора 1024px
    .container{ max-width:970;}
}
@media (max-width:992px){
// для планшета
    .container{ max-width:750px;}
}
@media (max-width:767px){
// для мобильных устройств
    .container{ max-width:none;}
}
-----------------Отзывчиво адаптивная вёрстка-------------------------
Микс отзывчивой и адаптивной вёрстки

----------------------Медиа запросы-----------------------------------
// указываем определённые условия + можно комбинировать их
типы медиа запросов:
___________________тип устройства_________________________
@media all {... styles} // default
@media print {... styles} //документы предварительного просмотра печати
@media screen {... styles} // для цветных мониторов комп.
@media speech {... styles} // для синтезаторов речи
// запрос со значением типа устройств не является brackpoint
___________________характеристики устройства_________________________
@media (orientation:landscape/portrait) // положение устройств
//количество пиксел на дюйм
@media (resolution: 300dpi / max-resolution: ... / min-resolution: ...)
@media monochrome
______________________Brackpoints________________________________
@media (max-width: ... / min-width: ... / min-height: ... / max-height: ... /  )

можно комбинировать логическим оператором and / or
@media screen and / or (max-width:767px){}
, равняется оператору or
@media screen and (max-width:767px) , screen and (max-height:700px)
{}
*примечание
медиа запрос можно применять при подключении файла .css в html  в теге <link>
<link rel="stylesheet" media="screen and (color)" href="example.css">
а также в файле стилей при подключении другого файла
@import url(color.css) screen and (color);

-------------------------------------Метод "Mobile first"--------------------------------------------------------------------------
описываем стили для моб устройств
медиа запросы начинаем с (min-width)
---------------------------------------лучшая практика при адаптивной вёрстке -------------------------------------------------------
// запрещать масштабировать страницу но нужно убедиться в качественном адаптиве страницы
<meta name='viewport' content='width=divice-width, initial-scale=1.0, maximun-scale=1.0, user-scalable=0'>
// для моб устройств делать меню "бургер"
//скрытие второстипенных елементов
// при уменьшении экрана надо уменьшать отступы/ размер шрифта
// навигационные элементы можно наоборот увеличить например: w=40 h=40 px;
делать адаптивные изображения:
если картинка слишком большая вёрстка сломается
поэтому .block > img {max-width:100%;}
ограничиваем его по родителю

_________________групировка в коде_______________________
css:
    .element{
        styles
        ...}
        @ media (max-width:992px) {...}
        @ media (max-width:767px) {...}
scss:
    .element{
        styles
        ...
        @ media (max-width:992px) {...}
        @ media (max-width:767px) {...}
        }







